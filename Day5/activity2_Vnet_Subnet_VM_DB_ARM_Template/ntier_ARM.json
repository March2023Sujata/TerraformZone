{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetAddressSpace": {
            "type": "string",
            "metadata": {
                "description": "addressSpace of vnet"
            }
        },
        "subnetNames": {
            "type": "array",
            "metadata": {
                "description": "names of the subnets"
            }
        },
        "subnetAddressSpace": {
            "type": "array",
            "metadata": {
                "description": "address Spaces of the subnets"
            }
        },
		"vmSize": {
			"type": "string",
			
			"metadata": {
					"description": "size of VM"
			}
		},
		"adminUsername": {
			"type": "string",
			
			"metadata": {
			"description": "Specifies a username for the Virtual Machine."
			}
		},
		"adminPWD": {
			"type": "securestring",
			
			"metadata": {
			"description": "Specifies a password for the Virtual Machine."
			}
		},
		"dbusername": {
            "type": "string",
            "metadata": {
                "description": "username for database"
            }
        },
        "dbpassword": {
            "type": "securestring",
            "metadata": {
                "description": "password for database"
            }
        },
		"websubnet": {
            "type": "string",
            "metadata": {
                "description": "name of the subnet in which you want to create vm"
            }
        }
    },
    "variables": {
        "vnet-name": "ntier-vnet",
		"vm-name":"azureVM",
		"publicIPAddressName":"vm-public-ip",
		"networkInterfaceName":"vm-NIF",
		"networkSecurityGroupName":"vm-NSG",
		"location_RG":"[resourceGroup().location]",
		"vnet-id":"[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-name'))]",		
		"server-name": "ntierSQLServer",
        "db-name": "empDB",
        "sqlserver-id": "[resourceId('Microsoft.Sql/servers', variables('server-name'))]",
		"nic_id":"[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
		"public_id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
		"sub_id":"[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet-name') ,parameters('subnetNames')[0])]",
		"nsg_id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
		"web_id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-name'),parameters('websubnet'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "name": "[variables('vnet-name')]",
            "location": "[variables('location_RG')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [ "[parameters('vnetAddressSpace')]" ]
                }
            },
            "tags": {
                "Env": "Dev",
                "CreatedBy": "ARM Templates"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('vnet-name'),'/',parameters('subnetNames')[copyIndex()])]",
            "properties": {
                "addressPrefix": "[parameters('subnetAddressSpace')[copyIndex()]]"
            },
            "copy": {
                "name": "subnetcopy",
                "count": "[length(parameters('subnetNames'))]",
                "mode": "Serial"
            },
            "dependsOn": [
                "[variables('vnet-id')]"
            ]
        },
		{
            
            "type": "Microsoft.Sql/servers",
			"name": "[variables('server-name')]",
            "apiVersion": "2021-11-01",
            "location": "[variables('location_RG')]",
            "tags": {
                "displayName": "[variables('server-name')]"
            },
            "properties": {
                "administratorLogin": "[parameters('dbusername')]",
                "administratorLoginPassword": "[parameters('dbpassword')]"
            },
            "resources": [
                {
                    "type": "firewallRules",
                    "apiVersion": "2021-11-01",
                    "dependsOn": [
                        "[variables('sqlserver-id')]"
                    ],
                    "location": "[variables('location_RG')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ],
            "dependsOn": [
                "[variables('vnet-id')]"
            ]
        },
		{
            
            "type": "Microsoft.Sql/servers/databases",
			"name": "[concat(variables('server-name'),'/',variables('db-name'))]",
            "apiVersion": "2021-11-01",
            "location": "[variables('location_RG')]",
            "tags": {
                "displayName": "[variables('db-name')]"
            },
            "dependsOn": [
                "[variables('sqlserver-id')]"
            ],
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "edition": "Basic",
                "requestedServiceObjectiveName": "Basic"
            }
        },
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-05-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[variables('location_RG')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic"
			},
			"sku": {
				"name": "Basic"
			}
			
		},
		
			{
				"type": "Microsoft.Network/networkSecurityGroups",
				"apiVersion": "2020-05-01",
				"name": "[variables('networkSecurityGroupName')]",
				"location": "[variables('location_RG')]",
				"properties": {
					"securityRules": [
						{
							"name": "ssh_rule",
							"properties": {
								"description": "Locks inbound down to ssh default port 22.",
								"protocol": "Tcp",
								"sourcePortRange": "*",
								"destinationPortRange": "22",
								"sourceAddressPrefix": "*",
								"destinationAddressPrefix": "*",
								"access": "Allow",
								"priority": 123,
								"direction": "Inbound"
							}
						}]
					}
			},
			
			{
				"type": "Microsoft.Network/networkInterfaces",
				"apiVersion": "2020-05-01",
				"location": "[variables('location_RG')]",
				"name": "[variables('networkInterfaceName')]",
				"tags": {
						"Env": "Dev",
						"CreatedBy": "ARM Templates"
					},
				"dependsOn": [
					"[variables('public_id')]",
					"[variables('vnet-id')]",
					"[variables('sub_id')]",
					"[variables('nsg_id')]"
					],
				"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
							"id": "[variables('public_id')]"
								},
							"subnet": {
							"id": "[variables('web_id')]"
							}
						}
						}
					]
				}
			},
			{
				"type": "Microsoft.Compute/virtualMachines",
				"apiVersion": "2022-11-01",
				"name": "[variables('vm-name')]",
				"location": "[variables('location_RG')]",
					"tags": {
						"Env": "Dev",
						"CreatedBy": "ARM Templates"
					},
				"dependsOn": [
					"[variables('vnet-id')]",
					"[variables('sub_id')]",
					"[variables('nic_id')]"
					],
				"properties":{
						"hardwareProfile": {
							"vmSize": "[parameters('vmSize')]"
						},
						"osProfile": {
							"computerName": "[variables('vm-name')]",
							"adminPassword": "[parameters('adminPWD')]",
							"adminUsername": "[parameters('adminUsername')]",
							"linuxConfiguration": {
							"disablePasswordAuthentication": false
							}
						},
						"storageProfile": {
							"imageReference": {
								"publisher": "Canonical",
								"offer": "0001-com-ubuntu-server-jammy",
								"sku": "22_04-lts-gen2",
								"version": "latest"
							}
						},
						"networkProfile": {
							"networkInterfaces": [
								{
								"id": "[variables('nic_id')]"
								}
							]
						}
					}
			}
    ]
}